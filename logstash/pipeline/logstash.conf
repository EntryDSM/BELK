input {
	beats {
		port => 5001
	}
}

filter {
	if [fields][server] == "jindo" {
		grok {
			match => {
				"message" => "I, \[(?<requested_time>\d+-\d+-\d+T\d+:\d+:\d+.\d+) #1\]  INFO -- : \[(?<request_id>(\w+-)+\w+)\] method=%{WORD:method} path=%{URIPATH:url} format=%{GREEDYDATA:format} controller=%{WORD:controller} action=%{WORD:action} status=%{POSINT:status} duration=%{NUMBER} view=%{NUMBER}%{GREEDYDATA} time=(?<date>(\d+-)+\d+) (?<time>(\d+:)+\d+) \+0900 body=(?<body>.*})%{GREEDYDATA:exception}"
			}
			remove_field => ["message"]
		}
	}
	if [fields][server] == "husky" {
		grok {
			match => {
				"message" => "I,.(?<datetime>\d+-\d+-\d+T\d+:\d+:\d+.\d+)\W+(?<method>[^,]+)\W+(?<service>[^,]+)\W+(?<headers>[^,]+)\W+[^,]+\W+[^,]+\W+(?<controller>[^,]+)[^{]+(?<body>[^}]+.)\W+(?<params>[^}]+)[^\/]+(?<uri>[^]]+)."
			}
			remove_field => ["message"]
		}
	}
	if [fields][server] == "samoyed" {
		grok {
			match => {
				"message" => "{\"written_at\": \"(?<date>\d+-\d+-\d+T\d+:\d+:\d+.\d+)Z\", \"written_ts\": (\d+), \"type\": \"%{WORD}\", \"correlation_id\": \"(?<request_id>(\w+-)+\w+)\", \"remote_user\": \"%{GREEDYDATA}\", \"request\": \"%{URIPATH:url}\", \"referer\": \"%{GREEDYDATA}\", \"x_forwarded_for\": \"%{GREEDYDATA}\", \"protocol\": \"%{GREEDYDATA}\", \"method\": \"%{WORD:method}\", \"remote_ip\": \"%{IPV4:ip}\", \"request_size_b\": %{NUMBER}, \"remote_host\": \"%{IPV4}\", \"remote_port\": %{POSINT}, \"request_received_at\": \"(\d+-\d+-\d+T\d+:\d+:\d+.\d+)Z\", \"response_time_ms\": %{NUMBER}, \"response_status\": %{POSINT:status}, \"response_size_b\": %{GREEDYDATA}, \"response_content_type\": \"%{GREEDYDATA}\", \"response_sent_at\": \"(\d+-\d+-\d+T\d+:\d+:\d+.\d+)Z\"}"
			}
			remove_field => ["message"]
		}
	}
	if [fields][server] == "schnauzer" {
		if [fields][classification] == "http" {
			grok {
				match => {
					"message" => "%{DATESTAMP:date} \[%{WORD:level}] - HTTP %{WORD:method} %{URIPATHPARAM:path} %{NUMBER:status} \[%{GREEDYDATA:message}] %{IPV4:ip} %{GREEDYDATA:parameter}"
				}
				remove_field => ["message"]
			}
		}
		if [fields][classification] == "socket" {
			grok {
				match => {
					"message" => "%{DATESTAMP:date} \[%{WORD:level}] - SOCKET %{WORD:event} %{WORD:status} \[%{GREEDYDATA:message}] %{GREEDYDATA:parameter}"
				}
				remove_field => ["message"]
			}
		}
	}
	if [fields][server] == "print_admission_ticket" {

	}
}

output {
	elasticsearch {
		hosts => ["elasticsearch:9200"]
		index => "%{[@metadata][beat]}-%{[fields][server]}-%{+YYYY.MM.dd}"
		user => "elastic"
		password => "changeme"
	}
}